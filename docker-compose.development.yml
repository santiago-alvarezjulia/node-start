services:
  app:
    build: # Construcción de la imagen
      context: . 
      dockerfile: Dockerfile.development # Archivo de configuración de la imagen
    ports: # Mapeo de puertos de la máquina host al contenedor
      - "3000:3000"
    depends_on:
      - mongo
    volumes:
      - .:/app  # Ajustado para coincidir con WORKDIR /app del Dockerfile para hot reloading
      - /app/node_modules  # Evita sobrescribir node_modules con el volumen

  mongo:
    image: mongo:8.0.5
    ports:
      - "27017:27017"
    volumes: # Mapeo de volúmenes
      - mongo_data:/data/db

  mongo-express:
    image: mongo-express:1.0.2-18
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_URL=${ME_URL}
      - ME_CONFIG_BASICAUTH_USERNAME=${ME_ADMIN_USER}
      - ME_CONFIG_BASICAUTH_PASSWORD=${ME_ADMIN_PASSWORD}
    depends_on:
      - mongo

  prometheus:
    image: prom/prometheus:v3.2.1
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:11.5.2
    ports:
      - "3001:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      - prometheus

volumes: # Definición de volúmenes
  mongo_data:
  prometheus_data:
  grafana_data:
