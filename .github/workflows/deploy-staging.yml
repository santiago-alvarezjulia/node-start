name: Deploy to Staging

on:
  push:
    branches:
      - staging

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    environment: staging

    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Create .env file
        run: |
          echo "PORT=${{ secrets.PORT }}" > .env.staging
          echo "NODE_ENV=${{ secrets.NODE_ENV }}" >> .env.staging
          echo "MONGO_URL=${{ secrets.MONGO_URL }}" >> .env.staging

      - name: Loguearse en Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Construir la imagen Docker
        run: |
          docker build -f Dockerfile.staging -t santiagoaj/node_start:latest .

      - name: Subir la imagen al registro
        run: |
          docker push santiagoaj/node_start:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    environment: staging

    steps:
      - name: Checkout código
        uses: actions/checkout@v4
        
      - name: Create .env file
        run: |
          echo "GRAFANA_ADMIN_USER=${{ secrets.GRAFANA_ADMIN_USER }}" > .env
          echo "GRAFANA_ADMIN_PASSWORD=${{ secrets.GRAFANA_ADMIN_PASSWORD }}" >> .env

      - name: Copiar .env al servidor
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: ".env"
          target: "/home/ec2-user/app"

      - name: Copiar docker-compose al servidor
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "docker-compose.staging.yml"
          target: "/home/ec2-user/app"

      - name: Conectarse al servidor y actualizar contenedores (instalar docker de ser necesario)
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Instalar Docker si no está presente
            if ! command -v docker &> /dev/null; then
              sudo yum update -y
              sudo amazon-linux-extras install docker -y
              sudo service docker start
              sudo usermod -a -G docker ec2-user
            fi

            # Instalar Docker Compose si no está presente
            if ! command -v docker-compose &> /dev/null; then
              sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
            fi

            # Desplegar con docker-compose
            cd /home/ec2-user/app
            docker pull santiagoaj/node_start:latest
            docker-compose -f docker-compose.staging.yml down
            docker-compose -f docker-compose.staging.yml up -d
            docker image prune -f  # Elimina imágenes antiguas